@page "{restaurantId:int}"
@model OdeToFood.Pages.Restaurants.DetailModel
@{
    ViewData["Title"] = "Detail";
}

@*Adding {id} here changes the route that can be used to include the restaurant id on the url,
    rather than the query string. int constraint has been added too. ? means it is optional.
    page is smart enough to add restaurant. on the front of Id *@
@*@page "{id?:int}"*@


@*Could use this to check the contents of TempData*@
@*@if(TempData.ContainsKey("Message"))
    {
        <div>@TempData["Message"]</div>
    }*@

@*To use the binding method...*@
@if (Model.Message != null)
{
    <div class="alert alert-info">@Model.Message</div>
}

<h2>@Model.Restaurant.Name</h2>

<div>
    Id: @Model.Restaurant.Id
</div>

<div>
    Location: @Model.Restaurant.Location
</div>
<div>
    Cuisine: @Model.Restaurant.Cuisine
</div>


<a asp-page="./List" class="btn btn-primary">All Restaurants</a>