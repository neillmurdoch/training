@page
@model ListModel
@{
    ViewData["Title"] = "Restaurants";
}

@* Being a partial view has simplified this view...no ViewData *@

<h1>Restaurants</h1>

<form method="get">
    <div class="form-group">
        <div class="input-group">
            <!-- When using asp-for tag, you are already in the 'Model', so you don't need it like you do for the foreach below. Works like two way binding. -->
            <input type="search" class="form-control" asp-for="SearchTerm" name="searchTerm" />
            <div class="input-group-append">
                <span class="input-group-text">
                    <button class="btn btn-light">
                        <i class="fas fa-search"></i>
                    </button>
                </span>
            </div>
            @*<span class="input- input-group-btn">
                    <button class="btn btn-default">
                        <i class="glyphicon glyphicon-search"></i>
                    </button>
                </span>*@
        </div>
    </div>
</form>

@foreach (var restaurant in Model.Restaurants)
{
    //This is another tag helper that appears as async full element. THis is processed and rendered on the server
    <partial name="_Summary" model="restaurant" />
}

<a asp-page=".\Edit" class="btn btn-primary">Add New</a>

@section footer {
    <div>@Model.Message</div>
}